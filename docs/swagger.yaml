info:
  title: ALSIRAJ NODEJS SWAGGER  DOCUMENTATION
  version: 1.0.0
  description: __*This describes services details of ALSIRAJ*__
  termsOfService: 'https://alsiraj-website/terms-conditions/overview'
  contact:
    email: 'suriyathangaraman@gmail.com'
  license:
    name: ''
    url: 'https://www.alsiraj.com'
basePath: '/'
swagger: '2.0'
responses: {}
parameters: {}
tags:
  - name: 'Login'
    description: __Rest API's to create new user or admin.__
  - name: 'SignUp'
    description: __Rest API's to get login the application.__
  - name: 'RefreshToken'
    description: __Rest API's to get new Access Token.__
  - name: 'User Authentication'
    description: __Rest API's sample to Authenticate user details.__
  - name: 'Competitions'
    description: __Rest API's to get all information releated to competitions.__    
schemes:
  - http
  - https
securityDefinitions:
    Bearer:
        type: apiKey
        description: "Value: Bearer "
        name: Authorization
        in: header
security:
  - Bearer: []
paths:
  /masters/any/competition/add:
    post:
      tags:
        - 'Competitions'
      summary: To add new competitions
      operationId: _addEvent
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EventInputInformation'
      responses:
        '200':
          description: OK
          schema:
            type: 'object'
            properties:
              data:
                $ref: '#/definitions/GenralResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: To create new competition
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
  /masters/any/competition/edit/{id}:
    put:
      tags:
        - 'Competitions'
      summary: To update existing competition details
      operationId: _editEvent
      parameters:
       - in: path
         name: id
         required: true
         type: string
       - in: body
         name: body
         required: true
         schema:
            $ref: '#/definitions/EventInputInformation'
      responses:
        '200':
          description: OK
          schema:
            type: 'object'
            properties:
              data:
                $ref: '#/definitions/GenralResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description:  To udpate new competition
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
  /masters/any/competition/delete/{id}:
    delete:
      tags:
        - 'Competitions'
      summary: To delete existing competition
      operationId: _deleteEvent
      parameters:
       - in: path
         name: id
         required: true
         type: string
      responses:
        '200':
          description: OK
          schema:
            type: 'object'
            properties:
              data:
                $ref: '#/definitions/GenralResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: To delete new competition
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
  /masters/any/competition/list:
    get:
      tags:
        - 'Competitions'
      summary: To get existing competitions
      operationId: _getEvents
      responses:
        '200':
          description: OK
          schema:
            type: 'object'
            properties:
              data:
                type: 'array'
                items:
                 $ref: '#/definitions/GetEvents'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: To get existing competitions
      consumes:
        - 'application/json'
      produces:
        - 'application/json'      
  /masters/any/users/add:
    post:
      tags:
        - 'Login'
      summary: Create new user/admin
      operationId: _signup
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SignUpUserInputInfo'
      responses:
        '200':
          description: OK
          schema:
            type: 'object'
            properties:
              data:
                $ref: '#/definitions/SignUpDataValueResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Create new user/admin Failed
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
  /auth/signin:
    post:
      tags:
        - 'SignUp'
      summary: To login the application.__
      operationId: _signIn
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LoginUserInputInfo'
      responses:
        '200':
          description: OK
          schema:
            type: 'object'
            properties:
              data:
                $ref: '#/definitions/LoginResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Login Failed
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
  /auth/getAuthToken:
    post:
      tags:
        - 'RefreshToken'
      summary: To get  new AccessToken using refresh token.__
      operationId: _getAuthToken
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetRefreshTokenInfo'
      responses:
        '200':
          description: OK
          schema:
            type: 'object'
            properties:
              accessToken:
                type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: new Access Token Request Failed
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
  /test:
    get:
      tags:
        - 'User Authentication'
      summary: To validate the user token.__
      operationId: getUsers
      responses:
        '200':
          description: OK
          schema:
            type: 'object'
            properties:
              accessToken:
                type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: new Access Token Request Failed
      consumes:
        - 'application/json'
      produces:
        - 'application/json'                    

definitions:
  SignUpUserInputInfo:
    type: object
    properties:
      userName:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      emailId:
        type: string
      phoneNumber:
        type: number
      appUser:
        type: string
      userType:
        type: string
      documentUrl:
        type: string
  EventInputInformation:
    type: object
    properties:
      competitionName:
        type: string
      type:
        type: string
      status:
        type: string
      startDate:
        type: string
      endDate:
        type: string
      description:
        type: number
  GetEvents:
    type: object
    properties:
      id:
        type: string
      competitionName:
        type: string
      type:
        type: string
      status:
        type: string
      startDate:
        type: string
      endDate:
        type: string
      description:
        type: number        
  GenralResponse:
    type: object
    properties:
     status:
      type: number
     message:
      type: string
  GetRefreshTokenInfo:
    type: object
    properties:
      token:
        type: string      
  LoginUserInputInfo:
    type: object
    properties:
      password:
        type: string
      emailId:
        type: string
  LoginResponse:
    type: object
    properties:
      status: 
        type: boolean
      message:
        type: string
      userType:
        type: string
      data:
        type: object
        properties:
          status:
            type: boolean
          token:
            type: string
          refreshtoken:
            type: string      
      userDbInfo:
         type: object
         properties:
          _id:
            type: string
          userName:
            type: string
          firstName:
            type: string
          lastName:
            type: string
          password:
            type: string
          emailId:
            type: string 
          phoneNumber:
            type: string
          appUser:
            type: string
          userType:
            type: string
          documentUrl:
            type: string
  SignUpDataValueResponse:
    type: object
    properties:
      _id:
        type: string
      userName:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      emailId:
        type: string 
      phoneNumber:
        type: string
      appUser:
        type: string
      userType:
        type: string
      documentUrl:
        type: string                                           
  ErrorResponse:
    type: object
    properties:
      httpErrorMessage:
        type: 'string'
      message:
        type: 'string'              
 